{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,kBAAkB;AAClB,IAAM,EAAO,SAAS,aAAa,CAAC,SAE9B,EAAuB,SAAC,CAA9B,M,EAGE,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAFsB,EAAQ,QAAQ,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,EAE5B,OAAO,CAAC,SAAA,CAAlB,EACE,GAAI,AAA0B,IAA1B,EAAM,QAAQ,CAAC,MAAM,CAAQ,CAC/B,IAAM,EAAY,SAAS,aAAa,CAAC,QACnC,EAAa,EAAM,UAAU,CAAC,SAAS,CAAC,IAAI,EAElD,CAAA,EAAU,WAAW,CAAG,EACxB,EAAM,WAAW,CAAC,EAAM,UAAU,EAClC,EAAM,YAAY,CAAC,EAAW,EAAM,UAAU,EAE9C,EAAqB,EACvB,CACF,EACF,EAEA,EAAqB,GAErB,EAAK,gBAAgB,CAAC,QAAS,SAAA,CAA/B,EACE,IAAM,EAAS,EAAE,MAAM,CAAC,OAAO,CAAC,QAEhC,GAAI,EAAQ,CACV,IAAM,EAAO,EAAO,kBAAkB,AAElC,AAAuB,CAAA,SAAvB,EAAK,KAAK,CAAC,OAAO,CACpB,EAAK,KAAK,CAAC,OAAO,CAAG,QAErB,EAAK,KAAK,CAAC,OAAO,CAAG,MAEzB,CACF,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar tree = document.querySelector(\".tree\");\nvar addSpanForEachHeader = function(element) {\n    var childrens = _to_consumable_array(element.children);\n    childrens.forEach(function(child) {\n        if (child.children.length !== 0) {\n            var newHeader = document.createElement(\"span\");\n            var headerText = child.firstChild.nodeValue.trim();\n            newHeader.textContent = headerText;\n            child.removeChild(child.firstChild);\n            child.insertBefore(newHeader, child.firstChild);\n            addSpanForEachHeader(child);\n        }\n    });\n};\naddSpanForEachHeader(tree);\ntree.addEventListener(\"click\", function(e) {\n    var header = e.target.closest(\"span\");\n    if (header) {\n        var list = header.nextElementSibling;\n        if (list.style.display === \"none\") list.style.display = \"block\";\n        else list.style.display = \"none\";\n    }\n});\n\n//# sourceMappingURL=index.8573712d.js.map\n","'use strict';\n\n// write code here\nconst tree = document.querySelector('.tree');\n\nconst addSpanForEachHeader = (element) => {\n  const childrens = [...element.children];\n\n  childrens.forEach(child => {\n    if (child.children.length !== 0) {\n      const newHeader = document.createElement('span');\n      const headerText = child.firstChild.nodeValue.trim();\n\n      newHeader.textContent = headerText;\n      child.removeChild(child.firstChild);\n      child.insertBefore(newHeader, child.firstChild);\n\n      addSpanForEachHeader(child);\n    }\n  });\n};\n\naddSpanForEachHeader(tree);\n\ntree.addEventListener('click', e => {\n  const header = e.target.closest('span');\n\n  if (header) {\n    const list = header.nextElementSibling;\n\n    if (list.style.display === 'none') {\n      list.style.display = 'block';\n    } else {\n      list.style.display = 'none';\n    }\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","tree","document","querySelector","addSpanForEachHeader","element","childrens","_array_without_holes","isArray","children","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","forEach","child","newHeader","createElement","headerText","firstChild","nodeValue","trim","textContent","removeChild","insertBefore","addEventListener","e","header","target","closest","list","nextElementSibling","style","display"],"version":3,"file":"index.8573712d.js.map"}